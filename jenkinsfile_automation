pipeline {
    agent any
    
    parameters {
        choice(
            choices: ['development', 'production'],
            description: 'Select environment',
            name: 'ENVIRONMENT'
        )
        string(
            defaultValue: 'your_bucket_name',
            description: 'Enter Google Storage bucket name',
            name: 'BUCKET_NAME'
        )
    }

    stages {
        stage('Delete Old Files') {
            steps {
                script {
                    def environment = params.ENVIRONMENT
                    def bucketName = params.BUCKET_NAME

                    // Set up Google Cloud SDK authentication
                    sh 'gcloud auth activate-service-account --key-file=path/to/service-account-key.json'

                    // List objects in the specified bucket
                    def objects = sh(script: "gsutil ls gs://${bucketName}/**", returnStdout: true).trim().split('\n')

                    // Calculate two years ago
                    def twoYearsAgo = sh(script: "date -d '2 years ago' +'%Y-%m-%dT%H:%M:%SZ'", returnStdout: true).trim()

                    // Loop through each object and delete if older than two years
                    objects.each { object ->
                        def lastModified = sh(script: "gsutil stat ${object} | grep 'Creation time:' | awk '{print $3}'", returnStdout: true).trim()
                        if (lastModified < twoYearsAgo) {
                            echo "Deleting ${object}"
                            sh "gsutil rm ${object}"
                        }
                    }
                }
            }
        }
    }
}